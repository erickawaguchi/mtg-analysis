CREATE TYPE format AS ENUM (
    'standard',
    'modern',
    'legacy'
);

CREATE TABLE tournament_info (
    tourny_id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    date DATE NOT NULL,
    format FORMAT NOT NULL,
    /* may not be recorded */
    size INTEGER,
    url TEXT NOT NULL,
    /* entirely possible to have tournaments with same name on same day in same format */
    UNIQUE (name, date, format, url)
);

CREATE TABLE tournament_entry (
    tourny_id INTEGER NOT NULL,
    entry_id SERIAL,
    archetype TEXT NOT NULL,
    place TEXT NOT NULL,
    player TEXT NOT NULL,
    deck_name TEXT NOT NULL,
    url TEXT NOT NULL,
    PRIMARY KEY (entry_id),
    UNIQUE (tourny_id, archetype, place, player),
    FOREIGN KEY (tourny_id) REFERENCES tournament_info (tourny_id)
);

CREATE TABLE entry_card (
    entry_id INTEGER NOT NULL,
    card TEXT NOT NULL,
    mainboard BOOLEAN NOT NULL,
    quantity INTEGER NOT NULL,
    CONSTRAINT positive_quantity CHECK (quantity > 0),
    PRIMARY KEY (entry_id, card, mainboard),
    FOREIGN KEY (entry_id) REFERENCES tournament_entry (entry_id)
);

CREATE TABLE pricing (
    card TEXT,
    set TEXT,
    date DATE, -- date time?
    price FLOAT
    PRIMARY KEY (card, set, date)
);

CREATE TYPE color AS ENUM (
    'w', -- white
    'u', -- blue
    'b', -- black
    'r', -- red
    'g', -- green
    'c' -- colorless
);

CREATE TABLE card_color (
    card TEXT,
    color COLOR,
    PRIMARY KEY (card, color)
);

CREATE TABLE card_type (
    card TEXT,
    type TEXT,
    PRIMARY KEY (card, type)
);

CREATE TABLE card_cmc (
    card TEXT PRIMARY KEY,
    cmc INTEGER NOT NULL,
    CONSTRAINT positive_quantity CHECK (cmc >= 0),
);

CREATE TABLE card_pt (
    card TEXT PRIMARY KEY,
    power INTEGER NOT NULL,
    toughness INTEGER NOT NULL
);

CREATE TABLE card_text (
    card TEXT PRIMARY KEY,
    text TEXT NOT NULL
);

CREATE TABLE set_info (
    set TEXT PRIMARY KEY,
    full_name TEXT NOT NULL,
    release DATE NOT NULL,
    size INTEGER NOT NULL
);


